---
- name: Generate key by Subkey
  shell: "{{ 'assets/bin/subkey --ed25519 generate' if prefix['key'] == 'grandpa' else 'assets/bin/subkey --sr25519 generate' }}"
  register: results
  tags:
    - create

- debug:
    msg: "{{ results }}"
  tags:
    - debug 

- set_fact:
    seed: "{{ results.stdout | regex_search(regexp_seed,'\\1') | first }}"
    secret_seed: "{{ results.stdout_lines[2].split(' ')[-1] }}"
    account_id: "{{ results.stdout | regex_search(regexp_account_id,'\\1') | first }}"
  vars:
    regexp_seed: "`(.*?)`"
    regexp_account_id: "Account ID:         0x(.*?)\\n"
  tags:
    - create
    
- name: Create key file for node
  copy:
    dest: ./data/uploads/nodes/{{ droplet.data.ip_address }}/keystore/{{ prefix.value }}{{ account_id }}
    content: | 
      "{{ seed }}"
    mode: "0644"
  tags:
    - create


###############################
##### INSPECT KEY FOR SPEC ####
############################### 
- debug:
    msg: "{{ secret_seed }}"
  tags:
    - debug 

- name: INSPECT created key by Subkey
  shell:  "{% if prefix['key'] == 'grandpa' -%}
            assets/bin/subkey --ed25519 inspect {{ secret_seed }}
          {% else -%}
            assets/bin/subkey --sr25519 inspect {{ secret_seed }}
          {% endif -%}"
  register: results
  tags:
    - create

- debug:
    msg: "{{ results }}"
  tags:
    - debug 

- set_fact:
    ss58_address: "{{ results.stdout_lines[-1].split(' ')[-1] }}"
  tags:
    - create

- name: Set pair "prefix_key --> ss58_address" for spec generation
  set_fact:
    session_keys: "{{ session_keys | default({}) | combine ({ prefix.key : ss58_address }) }}"
  tags: 
    - create