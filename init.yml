---
- hosts: localhost
  connection: local
  gather_facts: false

  vars:
    prefixes:
      grandpa: '6772616e'
      babe: '62616265'
      im_online: '696d6f6e'
      authority_discovery: '61756469'


  tasks:
    - name: Generate list of nodes names
      set_fact:
        validators_list: "{{ range(1, config.validators.validators_count + 1) | map('regex_replace', '(^.)', 'validator-\\1') | list }}"
      
    - name: Create DigitalOcean droplets 
      community.digitalocean.digital_ocean_droplet:
        unique_name: yes
        region: "{{ config.validators.droplet_region }}"
        image: "{{ config.validators.droplet_image }}"
        name: "{{ item }}"
        size_id: "{{ config.validators.droplet_size_id }}"
        state: present
        ssh_keys: "{{ config.common.ssh_keys }}"
      register: created_droplets
      with_items: '{{ validators_list }}'

    - digital_ocean_tag:
        name: test_robonomics
        resource_id: "{{ item.data.droplet.id }}"
        state: present
      loop: "{{ created_droplets.results }}"

    - name: Add new droplet to host group
      local_action: add_host hostname={{ item.data.ip_address }} groupname=validators do_id={{ item.data.droplet.id }}
      loop: "{{ created_droplets.results }}"
  
    - name: Wait for port 22 to become available
      wait_for:
        host: "{{ item.data.ip_address }}"
        port: 22
      loop:
        "{{ created_droplets.results }}"

    - name: DOWNLOAD latest binaries
      include_tasks: tasks/download_latest_binaries.yml
        
    - name: ==CREATE== Create keys and folders structure for every node
      include_tasks: tasks/generate_keystores.yml
      loop: 
        "{{ created_droplets.results }}"
      loop_control:
        loop_var: droplet

    - name: ==DEBUG== Nodes keys
      debug:
        msg: "{{ nodes_session_keys }}"
    
    - name: ==CREATE== Generate SPEC file
      include_tasks: tasks/spec_generate.yml

    - name: ==CREATE== Generate TEST_KEYS file
      include_tasks: tasks/create_test_keys.yml
      tags:
        - test_keys_gen


###############################
############ UPLOAD ###########
###############################  
- hosts: validators
  user: root
  gather_facts: false

  tasks:
    - name: Copy created node files to every node
      copy:
        src: data/uploads/nodes/{{ hostvars[inventory_hostname]['inventory_hostname'] }}/
        dest: /root/.local/share/robonomics/chains/dev/
        owner: root
        group: root
        mode: '0644'
        backup: yes

    - name: Copy BIN file to every node
      copy:
        src: data/uploads/common/robonomics
        dest: /usr/bin/robonomics
        owner: root
        group: root
        mode: u=rwx,g=rx,o=rx
        backup: yes

    - name: Copy service file to every node
      copy:
        src: data/uploads/common/robonomics.service
        dest: /etc/systemd/system/robonomics.service
        owner: root
        group: root
        mode: '0644'
        backup: yes

    - name: Copy TEST_KEYS file to every node
      copy:
        src: data/uploads/common/test_keys.json
        dest: /root/test_keys.json
        owner: root
        group: root
        mode: '0644'
        backup: yes

    - name: Creates directory /etc/substrate
      file:
        path: /etc/substrate
        state: directory

    - name: Copy spec file to every node
      copy:
        src: data/uploads/common/spec.json
        dest: /etc/substrate/spec.json
        owner: root
        group: root
        mode: '0644'
        backup: yes

    - name: Enable service robonomics.service
      systemd:
        name: robonomics.service
        enabled: yes

    - name: Start service robonomics.service
      systemd:
        name: robonomics.service
        state: started
###############################
########### /UPLOAD ###########
###############################

- hosts: localhost
  user: root
  gather_facts: false

  tasks:
    - name: ==CREATE== Create Prometheus server
      include_tasks: tasks/set_prometheus_server.yml

    # - name: Show unventory
    #   debug: 
    #     msg: '{{ hostvars }}'
    #   tags:
    #     - debug
        
    - name: config file
      template:
        src: inventory.ini.j2
        dest: inventory.ini


- hosts: prometheus
  user: root
  gather_facts: false

  roles:
    - prometheus
    - grafana